/***************************************************************************//**
 *   @file   AD568X.h
 *   @brief  Header file of AD568X Driver.
 *   @author Dan Nechita
********************************************************************************
 * Copyright 2012(c) Analog Devices, Inc.
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *  - Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  - Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  - Neither the name of Analog Devices, Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *  - The use of this software may or may not infringe the patent rights
 *    of one or more patent holders.  This license does not release you
 *    from the requirement that you obtain separate licenses from these
 *    patent holders to use this software.
 *  - Use of the software either in source or binary form, must be run
 *    on or directly connected to an Analog Devices Inc. component.
 *
 * THIS SOFTWARE IS PROVIDED BY ANALOG DEVICES "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, NON-INFRINGEMENT,
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL ANALOG DEVICES BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, INTELLECTUAL PROPERTY RIGHTS, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
********************************************************************************
*   SVN Revision: 775
*******************************************************************************/
#ifndef __AD5686_H__
#define __AD5686_H__

/******************************************************************************/
/***************************** Include Files **********************************/
/******************************************************************************/
#include "stm32f4xx_hal.h"

/******************************************************************************/
/******************************** AD568X *************************************/
/******************************************************************************/

/* AD568x Versions */
#define AD5686          2   /* 16-bit DAC, no internal voltage reference. */


/* AD568X Input Register */
#define AD568X_CMD(x)                  (uint32_t)(((uint32_t)(0x000FU) & (uint32_t)(x)) << 20U)
#define AD568X_ADDR(x)                 (uint32_t)(((uint32_t)(0x000FU) & (uint32_t)(x)) << 16U)
#define AD568X_DATA_BITS(x)            (uint32_t)(((uint32_t)(0xFFFFU) & (uint32_t)(x)) <<  0U)

/* AD568X_CMD(x) options */
#define AD568X_CMD_NOP                 0U /* No operation. */
#define AD568X_CMD_WR_INPUT_N          1U /* Write to Input Register n. */
#define AD568X_CMD_UPDATE_DAC_N        2U /* Update DAC Register n. */
#define AD568X_CMD_WR_UPDT_DAC_N       3U /* Write to and update DAC Channel n. */
#define AD568X_CMD_POWERMODE           4U /* Power down/power up DAC. */
#define AD568X_CMD_LDAC_MASK           5U /* Hardware LDAC mask register. */
#define AD568X_CMD_SOFT_RESET          6U /* Software reset(power-on reset). */
#define AD568X_CMD_INT_REF_SETUP       7U /* Internal reference setup register. */
#define AD568X_CMD_SET_DCEN            8U /* Set up DCEN register. */
#define AD568X_CMD_SET_READBACK        9U /* Set up readback register. */

/* AD568X_ADDR(x) options */
#define AD568X_ADDR_DAC_A          1U  /* DAC A */
#define AD568X_ADDR_DAC_B          2U  /* DAC B */
#define AD568X_ADDR_DAC_C          4U  /* DAC C */
#define AD568X_ADDR_DAC_D          8U  /* DAC D */
#define AD568X_ADDR_DAC_A_B        3U  /* DAC A and DAC B */
#define AD568X_ADDR_DAC_ALL        15U /* All DACs */

/* Daisy-Chain Enable Register(DCEN) definition */
#define AD568X_DCEN_DISABLE        0U
#define AD568X_DCEN_ENABLE         1U

/* Power Setup Register definition */
#define AD568X_PWR_PDD(x)      (((x) & 0x3U) << 6U)
#define AD568X_PWR_PDC(x)      (((x) & 0x3U) << 4U)
#define AD568X_PWR_PDB(x)      (((x) & 0x3U) << 2U)
#define AD568X_PWR_PDA(x)      (((x) & 0x3U) << 0U)

/* AD568X_PWR_PDn(x) options(n = A, B, C, D) */
#define AD568X_PD_NORMAL       0U /* Normal operation */
#define AD568X_PD_1K           1U /* 1 kOhm to GND */
#define AD568X_PD_100K         2U /* 100 kOhm to GND */
#define AD568X_PD_3STATE       3U /* Three-state */

/* LDAC Mask Register definition */
#define AD568X_MSK_CH_A        1U
#define AD568X_MSK_CH_B        2U
#define AD568X_MSK_CH_C        4U
#define AD568X_MSK_CH_D        8U

/* Reference Setup Register definition */
#define AD568X_INT_REF_ON      0
#define AD568X_INT_REF_OFF     1

/* Clear code options */
#define AD568X_RST_ZERO_SCALE     0
#define AD568X_RST_MIDSCALE       1

/******************************************************************************/
/************************ Functions Declarations ******************************/
/******************************************************************************/

/*! Resets the device(clears the outputs to either zero scale or midscale). */
/*void AD568X_Reset(unsigned char resetOutput);*/
void AD568XReset(void);

/*! Puts the device in a specific power mode. */
void AD568XPowerMode(uint8_t Channel, uint8_t PwrMode);

/*!  Writes a 24-bit data-word to the Input Register of the device. */
void AD568XSetInputRegister(uint32_t RegisterValue);

/*! Write data to the Input Register or to DAC Register of a channel. */
void AD568XWriteFunction(uint8_t WriteCommand, 
                          uint8_t Channel, 
                          uint16_t Data);

/*! Selects the output voltage of the selected channel. */
void AD568XSetVoltageBIN(uint8_t Channel, uint16_t OutputVoltageValue);


void ad5686Test(uint16_t value);

#endif /* __AD5686_H__ */
